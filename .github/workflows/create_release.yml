# Copyright (c) St√©phane ANDRE.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to main branch.
# This pipeline create a release

name: Create Release

on:
  push:
    tags:
    - 'v*.*.*'
  workflow_dispatch:

jobs:

  # GitVersion
  gitversion:
    runs-on: windows-latest
    outputs:
      SemVer: ${{ steps.gitversion.outputs.SemVer }}

    steps:

      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      # Install Git version
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      # Check Git version
      - name: Check Git Semantic Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1 # https://github.com/GitTools/actions/blob/main/docs/examples/github/gitversion/execute/usage-examples.md
        with:
          useConfigFile: true
          configFilePath: .\.github\GitVersion.yml
          disableNormalization: true

  # Build and test
  build:
    uses: avantipoint/workflow-templates/.github/workflows/dotnet-build.yml@master # https://github.com/AvantiPoint/workflow-templates/blob/master/.github/workflows/dotnet-build.yml
    needs: [ gitversion ]
    with:
      dotnet-test-logger: GitHubActions --no-build --no-restore
      build-args: '/p:Version=${{needs.gitversion.outputs.SemVer}}'
      name: Build
      solution-path: .\src\MyNetUi.sln
      
  release:
    runs-on: ubuntu-latest
    needs: [ gitversion, build ]
    env:
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      packageName: MyNet.UI
    permissions:
      contents: write
    outputs:
      version-name: ${{ steps.process-version.outputs.version-name }}
      release-display-name: ${{ steps.process-version.outputs.release-display-name }}
      is-preview: ${{ steps.process-version.outputs.is-preview }}

    steps:
      
      # Checkout
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Update CHANGELOG with all conventional commit from previous tag
      - name: Update CHANGELOG
        continue-on-error: true
        id: changelog
        uses: requarks/changelog-action@v1.10.1 # https://github.com/marketplace/actions/changelog-from-conventional-commits
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      # Commit changes in CHANGELOG and skip CI
      - name: Commit CHANGELOG.md
        continue-on-error: true
        uses: stefanzweifel/git-auto-commit-action@v4 # https://github.com/marketplace/actions/git-auto-commit
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md

      # Download artifacts
      - uses: actions/download-artifact@v4
        with:
          name: NuGet
          path: Artifacts/
      
      # Get package version
      - name: Process Package Version
        shell: bash
        id: process-version
        working-directory: Artifacts/
        run: |
          echo "Downloading package version script..."
          curl -sS -o process-version.pl https://raw.githubusercontent.com/avantipoint/workflow-templates/master/build/process-version.pl
          echo "Finished downloading package version script."
          echo "Processing package version..."
          perl process-version.pl ${{ env.packageName }}
      
      # Create release
      - uses: ncipollo/release-action@main # https://github.com/marketplace/actions/create-release
        name: Create Release
        with:
          artifacts: "Artifacts/*.nupkg,Artifacts/*.snupkg"
          artifactErrorsFailBuild: true
          draft: true
          generateReleaseNotes: false
          token: ${{ github.token }}
          name: "${{ steps.process-version.outputs.release-display-name }}"
          prerelease: ${{ steps.process-version.outputs.is-preview }}
          tag: v${{needs.gitversion.outputs.SemVer}}
          body: ${{ steps.changelog.outputs.changes }}